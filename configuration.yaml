script:
  check_inf_living_room_circadian:
    sequence:
      - alias: some alias
        choose:
          - alias: if circadian is off
            conditions:
              - condition: state
                entity_id: input_boolean.fsfr_scene_circadian
                state: 'off'
            sequence: []
          - alias: if circadian is on
            conditions:
              - condition: state
                entity_id: input_boolean.fsfr_scene_circadian
                state: 'on'
            sequence:
              - service: script.turn_on
                target:
                  entity_id: script.watch current scene off
                data:
                  variables: {}
        default: []
  sup_living_room_theater_check:
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.watch this scene is on
        data:
          variables: {}
  living_room_sup_scene_listener:
    sequence:
      - wait_template: "{{ is_state(scene_toggle_id, 'on') }}"
      - service: script.turn_on
        target:
          entity_id: script.apply_scene_to_light
        data:
          variables: {}
  living_room_inf_scene_listener:
    sequence:
      - wait_template: "{{ is_state(scene_toggle_id, 'on') }}"
      - service: script.turn_on
        target:
          entity_id: '"{{script.check_inf_living_room_ + next_scene_id}}"'
        data:
          variables: {}
  circadian_apply_living_room:
    sequence:
      - service: script.turn_off
        target:
          entity_id: script.living_room_inf_scene_listener
      - service: script.turn_off
        target:
          entity_id: script.living_room_sup_scene_listener
      - service: script.turn_on
        target:
          entity_id: script.util_rmv_light_scene
        data:
          variables:
            var_namespace: circadian_bri
            scene_id: circadian
      - service: script.turn_on
        target:
          entity_id: script.util_rmv_light_scene
        data:
          variables:
            var_namespace: circadian_temp
            scene_id: circadian
      - service: light.turn_on
        target:
          entity_id: light.living_room
        data:
          brightness_pct: "{{ states('input_number.fsfr_circadian_bri') | int }}"
          kelvin: "{{ states('input_number.fsfr_circadian_temp') | int }}"
  theater_apply_living_room:
    sequence:
      - service: script.turn_off
        target:
          entity_id: script.living_room_inf_scene_listener
      - service: script.turn_off
        target:
          entity_id: script.living_room_sup_scene_listener
      - service: script.turn_on
        target:
          entity_id: script.util_rmv_light_scene
        data:
          variables:
            var_namespace: theater_bri
            scene_id: theater
      - service: light.turn_on
        target:
          entity_id: light.living_room
        data:
          temperature: 2700k
          brightness_pct: "{{ states('input_number.fsfr_theater_bri') | int }}"
