input_number:
  fsfr_var_circadian_bri:
    name: "Input variable: circadian_bri"
    min: 0
    max: 100
    step: 1
    mode: slider
  fsfr_var_circadian_temp:
    name: "Input variable: circadian_temp"
    min: 1700
    max: 8000
    step: 1
    mode: slider
  fsfr_var_theater_bri:
    name: "Input variable: theater_bri"
    min: 0
    max: 100
    step: 1
    mode: slider
input_boolean:
  context_circadian:
    icon: "mdi: landscape"
    name: "Toggle context: circadian"
    initial: false
  context_theater:
    icon: "mdi: landscape"
    name: "Toggle context: theater"
    initial: false
script:
  apply_theater_living_room:
    alias: "SCRIPT: Apply context theater to light"
    sequence:
      - alias: "ACTION: Turn off superior context on listener"
        service: script.turn_off
        target:
          entity_id: script.listen_living_room_sup_context_on
      - alias: "ACTION: Detach variables of living_room in theater"
        service: "{{ detach_vars_curr_context_script_id }}"
      - alias: "ACTION: Attach variables of living_room in theater"
        service: "{{ attach_vars_curr_context_script_id }}"
      - alias: "ACTION: turn on light living_room with data of theater"
        service: light.turn_on
        target:
          entity_id: light.living_room
        data:
          temperature: 2700
          brightness_pct: "{{ states('input_number.fsfr_theater_bri') | int }}"
      - alias: "ACTION: Turn on the first superior context handler"
        service: script.turn_on
        target:
          entity_id: script.handle_living_room_sup_circadian
        data:
          variables:
            curr_context_toggle_id: input_boolean.context_theater
            first_inf_context_script: script.handle_living_room_inf_theater
            detach_vars_curr_context_script_id: script.DETACH LIGHT FROM VARIABLES IN Layer
            attach_vars_curr_context_script_id: script.ATTACH LIGHT TO VARIABLES IN layer
  apply_circadian_living_room:
    alias: "SCRIPT: Apply context circadian to light"
    sequence:
      - alias: "ACTION: Turn off superior context on listener"
        service: script.turn_off
        target:
          entity_id: script.listen_living_room_sup_context_on
      - alias: "ACTION: Detach variables of living_room in circadian"
        service: "{{ detach_vars_curr_context_script_id }}"
      - alias: "ACTION: Attach variables of living_room in circadian"
        service: "{{ attach_vars_curr_context_script_id }}"
      - alias: "ACTION: turn on light living_room with data of circadian"
        service: light.turn_on
        target:
          entity_id: light.living_room
        data:
          brightness_pct: "{{ states('input_number.fsfr_circadian_bri') | int }}"
          kelvin: "{{ states('input_number.fsfr_circadian_temp') | int }}"
      - alias: "ACTION: Turn on the first inferior context handler"
        service: script.turn_on
        target:
          entity_id: script.handle_living_room_inf_theater
        data:
          variables:
            curr_context_toggle_id: input_boolean.context_circadian
            first_inf_context_script: script.handle_living_room_inf_circadian
            detach_vars_curr_context_script_id: script.DETACH LIGHT FROM VARIABLES IN Layer
            attach_vars_curr_context_script_id: script.ATTACH LIGHT TO VARIABLES IN layer
  handle_living_room_sup_theater:
    alias: "SCRIPT: Superior context handler theater"
    sequence:
      - alias: "ACTION: turn on theater on listener"
        service: script.turn_on
        target:
          entity_id: script.listen_living_room_sup_context_on
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            sup_context_toggle_id: input_boolean.context_theater
            callback: script.apply_theater_living_room
  listen_living_room_sup_context_on:
    alias: "SCRIPT: Listen superior context on for living_room"
    sequence:
      - alias: "ACTION: Wait for superior context of living_room to be on"
        wait_template: "{{ is_state(sup_context_toggle_id, 'on') }}"
      - alias: "ACTION: apply context to light script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_living_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ callback }}"
  handle_living_room_inf_theater:
    alias: "SCRIPT: Handle inferior context theater for living_room"
    sequence:
      - alias: Is inferior context on or off?
        choose:
          - alias: if theater is on
            conditions:
              - alias: "CONDITION: check theater toggle is on"
                condition: state
                entity_id: input_boolean.context_theater
                state: on
            sequence:
              - alias: "ACTION: initialize current context off listener"
                service: script.turn_on
                target:
                  entity_id: script.listen_living_room_curr_context_off
                data:
                  variables:
                    curr_context_toggle_id: "{{ curr_context_toggle_id }}"
                    first_inf_context_script: "{{ first_inf_context_script }}"
                    detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
                    attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
                    callback: script.apply_theater_living_room
              - alias: "ACTION: initialize theater context off listener"
                service: script.turn_on
                target:
                  entity_id: script.listen_living_room_inf_context_off
                data:
                  variables:
                    curr_context_toggle_id: "{{ curr_context_toggle_id }}"
                    first_inf_context_script: "{{ first_inf_context_script }}"
                    detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
                    attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
                    inf_context_toggle_id: script.context_theater
          - alias: if theater is off
            conditions:
              - alias: "CONDITION: check theater is off"
                condition: state
                entity_id: input_boolean.context_theater
                state: off
            sequence:
              - alias: "ACTION: Initialize theater context on listener"
                service: script.turn_on
                target:
                  entity_id: script.listen_living_room_inf_context_on
                data:
                  variables:
                    curr_context_toggle_id: "{{ curr_context_toggle_id }}"
                    first_inf_context_script: "{{ first_inf_context_script }}"
                    detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
                    attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
                    inf_context_toggle_id: input_boolean.context_theater
              - alias: "ACTION: Turn on default layer of none other exists"
                service: script.turn_on
                target:
                  entity_id: script.apply_default_living_room
        default: []
  apply_default_living_room:
    alias: "SCRIPT: default"
    sequence:
      - alias: "ACTION: turn off living_room"
        service: light.turn_off
        target:
          entity_id: light.living_room
  listen_living_room_curr_context_off:
    alias: some alias
    sequence:
      - alias: "ACTION: Wait for current context to be off"
        wait_template: "{{ is_state(curr_context_toggle_id, 'off') }}"
      - service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_living_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ callback }}"
  listen_living_room_inf_context_off:
    alias: "SCRIPT: Listen inferior context off"
    sequence:
      - alias: "ACTION: Wait for inferior context to be off"
        wait_template: "{{ is_state(inf_context_toggle_id, 'off') }}"
      - alias: "ACTION: Call passthrough script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_living_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ first_inf_context_script }}"
  listen_living_room_inf_context_on:
    alias: "SCRIPT: Listen for inf context on"
    sequence:
      - alias: "ACTION: Wait for inf context to be on"
        wait_template: "{{ is_state(inf_context_toggle_id, 'on') }}"
      - alias: "ACTION: Call passthrough script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_living_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ first_inf_context_script }}"
  stop_inf_listen_passthrough_living_room:
    alias: some alias
    sequence:
      - alias: "ACTION: Turn off inferior context on listener"
        service: script.turn_off
        target:
          entity_id: script.listen_living_room_inf_context_on
      - alias: "ACTION: Turn off inferior context off listener"
        service: script.turn_off
        target:
          entity_id: script.listen_living_room_inf_context_off
      - alias: "ACTION: Turn off current context off listener"
        service: script.turn_off
        target:
          entity_id: script.listen_living_room_curr_context_off
      - alias: "ACTION: Call apply context or context handler"
        service: script.turn_on
        target:
          entity_id: "{{ call_back }}"
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
  init_living_room:
    alias: "SCRIPT: Initialize living_room"
    sequence:
      - alias: Get highest priority context for light living_room
        choose:
          - alias: if circadian is on
            conditions:
              - alias: "CONDITION: check circadian toggle is on"
                condition: state
                entity_id: input_boolean.context_circadian
                state: on
            sequence:
              - alias: "ACTION: apply context circadian to light"
                service: script.turn_on
                target:
                  entity_id: script.apply_circadian_living_room
          - alias: if theater is on
            conditions:
              - alias: "CONDITION: check theater toggle is on"
                condition: state
                entity_id: input_boolean.context_theater
                state: on
            sequence:
              - alias: "ACTION: apply context theater to light"
                service: script.turn_on
                target:
                  entity_id: script.apply_theater_living_room
        default:
          - alias: "Default: turn off light"
            service: light.turn_off
            target:
              entity_id: light.living_room
