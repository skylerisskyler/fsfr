automation:
  - id: var_bri_brightness
    trigger:
      - platform: state
        entity_id: input_number.var_bri_brightness
    action:
      - service: light.turn_on
        target:
          entity_id: group.var_bri_group
        data:
          brightness_pct: "{{ states('input_number.var_bri_brightness') | int }}"
script:
  init_skyler_room:
    alias: "SCRIPT: Initialize skyler_room"
    sequence:
      - alias: Get highest priority context for light skyler_room
        choose:
          - alias: if first is on
            conditions:
              - alias: "CONDITION: check first toggle is on"
                condition: state
                entity_id: input_boolean.context_first
                state: 'on'
            sequence:
              - alias: "ACTION: apply context first to light"
                service: script.turn_on
                target:
                  entity_id: script.apply_first_skyler_room
                data:
                  variables:
                    detach_vars_script_id: false
          - alias: if second is on
            conditions:
              - alias: "CONDITION: check second toggle is on"
                condition: state
                entity_id: input_boolean.context_second
                state: 'on'
            sequence:
              - alias: "ACTION: apply context second to light"
                service: script.turn_on
                target:
                  entity_id: script.apply_second_skyler_room
                data:
                  variables:
                    detach_vars_script_id: false
        default:
          - alias: "ACTION: apply default to skyler_room"
            service: script.turn_on
            target:
              entity_id: script.apply_default_skyler_room
            data:
              variables:
                detach_vars_script_id: false
  apply_first_skyler_room:
    alias: "SCRIPT: Apply context first to light"
    sequence:
      - alias: "ACTION: Turn off superior context on listener"
        service: script.turn_off
        target:
          entity_id:
            - script.listen_skyler_room_inf_context_on
            - script.listen_skyler_room_inf_context_off
            - script.listen_skyler_room_curr_context_off
            - script.listen_skyler_room_sup_context_on
      - alias: Check variables to detach for skyler_room
        choose:
          - alias: "ACTION: Check detach script ID exists"
            conditions:
              - condition: template
                value_template: "{{ detach_vars_script_id is not false }}"
            sequence:
              - alias: "ACTION: Detach variables of skyler_room in current scene"
                service: "{{ detach_vars_script_id }}"
        default: []
      - alias: "ACTION: turn on light skyler_room with styles of first"
        service: light.turn_on
        target:
          entity_id: light.skyler_room
        data:
          color_name: green
      - alias: "ACTION: Turn on the first inferior context handler"
        service: script.turn_on
        target:
          entity_id: script.inf_handler_skyler_room_second
        data:
          variables:
            curr_context_toggle_id: input_boolean.context_first
            first_inf_handler_script_id: script.inf_handler_skyler_room_first
            detach_vars_script_id: script.detach_skyler_room_first
  apply_second_skyler_room:
    alias: "SCRIPT: Apply context second to light"
    sequence:
      - alias: "ACTION: Turn off superior context on listener"
        service: script.turn_off
        target:
          entity_id:
            - script.listen_skyler_room_inf_context_on
            - script.listen_skyler_room_inf_context_off
            - script.listen_skyler_room_curr_context_off
            - script.listen_skyler_room_sup_context_on
      - alias: Check variables to detach for skyler_room
        choose:
          - alias: "ACTION: Check detach script ID exists"
            conditions:
              - condition: template
                value_template: "{{ detach_vars_script_id is not false }}"
            sequence:
              - alias: "ACTION: Detach variables of skyler_room in current scene"
                service: "{{ detach_vars_script_id }}"
        default: []
      - alias: "ACTION: Attach variables of skyler_room in second"
        service: script.attach_skyler_room_second
      - alias: "ACTION: turn on light skyler_room with styles of second"
        service: light.turn_on
        target:
          entity_id: light.skyler_room
        data:
          brightness_pct: "{{ states('input_number.var_bri_brightness') | int }}"
      - alias: "ACTION: Turn on the first superior context handler"
        service: script.turn_on
        target:
          entity_id: script.sup_handler_skyler_room_first
        data:
          variables:
            detach_vars_script_id: script.detach_skyler_room_second
      - alias: "ACTION: Turn on default handler"
        service: script.turn_on
        target:
          entity_id: script.inf_handler_skyler_room_default
        data:
          variables:
            curr_context_toggle_id: input_boolean.context_second
            first_inf_handler_script_id: script.inf_handler_skyler_room_second
            detach_vars_script_id: script.detach_skyler_room_second
  apply_default_skyler_room:
    alias: "SCRIPT: Apply default context to light"
    sequence:
      - alias: "ACTION: Turn off superior context on listener"
        service: script.turn_off
        target:
          entity_id:
            - script.listen_skyler_room_inf_context_on
            - script.listen_skyler_room_inf_context_off
            - script.listen_skyler_room_curr_context_off
            - script.listen_skyler_room_sup_context_on
      - alias: Check variables to detach for skyler_room
        choose:
          - alias: "ACTION: Check detach script ID exists"
            conditions:
              - condition: template
                value_template: "{{ detach_vars_script_id is not false }}"
            sequence:
              - alias: "ACTION: Detach variables of skyler_room in current scene"
                service: "{{ detach_vars_script_id }}"
        default: []
      - alias: "ACTION: Default turn off skyler_room"
        service: light.turn_on
        target:
          entity_id: light.skyler_room
        data:
          color_name: white
          brightness: 0
      - alias: "ACTION: Turn on the first superior context handler"
        service: script.turn_on
        target:
          entity_id: script.sup_handler_skyler_room_second
        data:
          variables:
            detach_vars_script_id: false
  sup_handler_skyler_room_second:
    alias: "SCRIPT: Superior context handler second"
    sequence:
      - alias: "ACTION: turn on second on listener"
        service: script.turn_on
        target:
          entity_id: script.listen_skyler_room_sup_context_on
        data:
          variables:
            detach_vars_script_id: "{{ detach_vars_script_id }}"
            sup_context_toggle_id: input_boolean.context_second
            apply_context_script_id: script.apply_second_skyler_room
      - alias: "ACTION: turn on next context first handler"
        service: script.turn_on
        target:
          entity_id: script.sup_handler_skyler_room_first
        data:
          variables:
            detach_vars_script_id: "{{ detach_vars_script_id }}"
  sup_handler_skyler_room_first:
    alias: "SCRIPT: Superior context handler first"
    sequence:
      - alias: "ACTION: turn on first on listener"
        service: script.turn_on
        target:
          entity_id: script.listen_skyler_room_sup_context_on
        data:
          variables:
            detach_vars_script_id: "{{ detach_vars_script_id }}"
            sup_context_toggle_id: input_boolean.context_first
            apply_context_script_id: script.apply_first_skyler_room
  inf_handler_skyler_room_first:
    alias: "SCRIPT: Handle inferior context first for skyler_room"
    sequence:
      - alias: Is inferior context on or off?
        choose:
          - alias: if first is on
            conditions:
              - alias: "CONDITION: check first toggle is on"
                condition: state
                entity_id: input_boolean.context_first
                state: 'on'
            sequence:
              - alias: "ACTION: Initialize current context off listener"
                service: script.turn_on
                target:
                  entity_id: script.listen_skyler_room_curr_context_off
                data:
                  variables:
                    detach_vars_script_id: "{{ detach_vars_script_id }}"
                    curr_context_toggle_id: "{{ curr_context_toggle_id }}"
                    apply_context_script_id: script.apply_first_skyler_room
              - alias: "ACTION: Initialize first context off listener"
                service: script.turn_on
                target:
                  entity_id: script.listen_skyler_room_inf_context_off
                data:
                  variables:
                    curr_context_toggle_id: "{{ curr_context_toggle_id }}"
                    first_inf_handler_script_id: "{{ first_inf_handler_script_id }}"
                    detach_vars_script_id: "{{ detach_vars_script_id }}"
                    inf_context_toggle_id: script.context_first
          - alias: if first is off
            conditions:
              - alias: "CONDITION: check first is off"
                condition: state
                entity_id: input_boolean.context_first
                state: 'off'
            sequence:
              - alias: "ACTION: Initialize first context on listener"
                service: script.turn_on
                target:
                  entity_id: script.listen_skyler_room_inf_context_on
                data:
                  variables:
                    curr_context_toggle_id: "{{ curr_context_toggle_id }}"
                    first_inf_handler_script_id: "{{ first_inf_handler_script_id }}"
                    detach_vars_script_id: "{{ detach_vars_script_id }}"
                    inf_context_toggle_id: input_boolean.context_first
              - alias: "ACTION: Turn on default layer of none other exists"
                service: script.turn_on
                target:
                  entity_id: script.apply_default_skyler_room
        default: []
  inf_handler_skyler_room_default:
    alias: "SCRIPT: default"
    sequence:
      - alias: "ACTION: initialize current context off listener"
        service: script.turn_on
        target:
          entity_id: script.listen_skyler_room_curr_context_off
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_handler_script_id: "{{ first_inf_handler_script_id }}"
            detach_vars_script_id: "{{ detach_vars_script_id }}"
            apply_context_script_id: script.apply_default_skyler_room
  listen_skyler_room_sup_context_on:
    mode: parallel
    alias: "SCRIPT: Listen superior context on for skyler_room"
    sequence:
      - alias: "ACTION: Wait for superior context of skyler_room to be on"
        wait_template: "{{ is_state(sup_context_toggle_id, 'on') }}"
      - alias: "ACTION: Call apply superior context to skyler_room script"
        service: script.turn_on
        target:
          entity_id: "{{ apply_context_script_id }}"
        data:
          variables:
            detach_vars_script_id: "{{ detach_vars_script_id }}"
  listen_skyler_room_curr_context_off:
    mode: parallel
    alias: "SCRIPT: Listen current context off for skyler_room"
    sequence:
      - alias: "ACTION: Wait for current context to be off"
        wait_template: "{{ is_state(curr_context_toggle_id, 'off') }}"
      - alias: "ACTION: Call apply superior context to skyler_room script"
        service: script.turn_on
        target:
          entity_id: "{{ apply_context_script_id }}"
        data:
          variables:
            detach_vars_script_id: "{{ detach_vars_script_id }}"
  listen_skyler_room_inf_context_off:
    mode: parallel
    alias: "SCRIPT: Listen inferior context off"
    sequence:
      - alias: "ACTION: Wait for inferior context to be off"
        wait_template: "{{ is_state(inf_context_toggle_id, 'off') }}"
      - alias: "ACTION: Call passthrough script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_skyler_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_handler_script_id: "{{ first_inf_handler_script_id }}"
            detach_vars_script_id: "{{ detach_vars_script_id }}"
  listen_skyler_room_inf_context_on:
    mode: parallel
    alias: "SCRIPT: Listen for inf context on"
    sequence:
      - alias: "ACTION: Wait for inf context to be on"
        wait_template: "{{ is_state(inf_context_toggle_id, 'on') }}"
      - alias: "ACTION: Call passthrough script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_skyler_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_handler_script_id: "{{ first_inf_handler_script_id }}"
            detach_vars_script_id: "{{ detach_vars_script_id }}"
  attach_skyler_room_second:
    alias: "SCRIPT: Attach variables of skyler_room in second"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.add_variable_to_group
        data:
          variables:
            group_id: var_bri_group
            light_id: light.skyler_room
  detach_skyler_room_second:
    alias: "SCRIPT: Detach variables of skyler_room in second"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.remove_variable_from_group
        data:
          variables:
            group_id: var_bri_group
            light_id: light.skyler_room
  stop_inf_listen_passthrough_skyler_room:
    alias: "SCRIPT: Passthrough for skyler_room"
    sequence:
      - alias: "ACTION: Turn off inferior context on listener"
        service: script.turn_off
        target:
          entity_id:
            - script.listen_skyler_room_inf_context_on
            - script.listen_skyler_room_inf_context_off
            - script.listen_skyler_room_curr_context_off
      - alias: "ACTION: Call apply context or context handler"
        service: script.turn_on
        target:
          entity_id: "{{ first_inf_handler_script_id }}"
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_handler_script_id: "{{ first_inf_handler_script_id }}"
            detach_vars_script_id: "{{ detach_vars_script_id }}"
  add_variable_to_group:
    alias: "SCRIPT: Util add light to variable"
    sequence:
      - service: group.set
        data:
          object_id: "{{ group_id }}"
          entities: "{{ state_attr('group.' + group_id, 'entity_id') | list + [light_id]
            }}"
  remove_variable_from_group:
    alias: "SCRIPT: Util remove light from variable"
    sequence:
      - service: group.set
        data:
          object_id: "{{ group_id }}"
          entities: "{{state_attr('group.' + 'group_id', 'entity_id')|reject('equalto',
            'light_id')| list}}"
input_boolean:
  context_first:
    icon: "mdi: landscape"
    name: "Toggle context: first"
    initial: false
  context_second:
    icon: "mdi: landscape"
    name: "Toggle context: second"
    initial: false
input_number:
  var_bri_brightness:
    name: "Input variable: bri"
    min: 0
    max: 100
    step: 1
    mode: slider
group:
  var_bri_group:
    name: "FSFR: bri"
    entities: []
