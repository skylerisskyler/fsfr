automation:
  - id: var_bri_brightness
    trigger:
      - platform: state
        entity_id: input_number.var_bri_brightness
    action:
      - service: group.turn_on
        target:
          entity_id: group.var_bri_group
        data:
          brightness_pct: "{{ states.input_number.var_bri_brightness | int }}"
script:
  init_skyler_room:
    alias: "SCRIPT: Initialize skyler_room"
    sequence:
      - alias: Get highest priority context for light skyler_room
        choose:
          - alias: if main is on
            conditions:
              - alias: "CONDITION: check main toggle is on"
                condition: state
                entity_id: input_boolean.context_main
                state: 'on'
            sequence:
              - alias: "ACTION: apply context main to light"
                service: script.turn_on
                target:
                  entity_id: script.apply_main_skyler_room
                data:
                  variables:
                    attach_vars_curr_context_script_id: script.attach_skyler_room_main
                    detach_vars_curr_context_script_id: script.detach_skyler_room_main
                    curr_context_toggle_id: input_boolean.context_main
        default:
          - alias: "Default: turn off light"
            service: light.turn_off
            target:
              entity_id: light.skyler_room
  apply_main_skyler_room:
    alias: "SCRIPT: Apply context main to light"
    sequence:
      - alias: "ACTION: Turn off superior context on listener"
        service: script.turn_off
        target:
          entity_id: script.listen_skyler_room_sup_context_on
      - alias: "ACTION: Detach variables of skyler_room in main"
        service: "{{ detach_vars_curr_context_script_id }}"
      - alias: "ACTION: Attach variables of skyler_room in main"
        service: "{{ attach_vars_curr_context_script_id }}"
      - alias: "ACTION: turn on light skyler_room with data of main"
        service: light.turn_on
        target:
          entity_id: light.skyler_room
        data:
          brightness_pct: "{{ states('input_number.var_bri_brightness') | int }}"
  listen_skyler_room_sup_context_on:
    alias: "SCRIPT: Listen superior context on for skyler_room"
    sequence:
      - alias: "ACTION: Wait for superior context of skyler_room to be on"
        wait_template: "{{ is_state(sup_context_toggle_id, 'on') }}"
      - alias: "ACTION: apply context to light script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_skyler_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ callback }}"
  apply_default_skyler_room:
    alias: "SCRIPT: default"
    sequence:
      - alias: "ACTION: turn off skyler_room"
        service: light.turn_off
        target:
          entity_id: light.skyler_room
  listen_skyler_room_curr_context_off:
    alias: "SCRIPT: Listen current context off for skyler_room"
    sequence:
      - alias: "ACTION: Wait for current context to be off"
        wait_template: "{{ is_state(curr_context_toggle_id, 'off') }}"
      - service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_skyler_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ callback }}"
  listen_skyler_room_inf_context_off:
    alias: "SCRIPT: Listen inferior context off"
    sequence:
      - alias: "ACTION: Wait for inferior context to be off"
        wait_template: "{{ is_state(inf_context_toggle_id, 'off') }}"
      - alias: "ACTION: Call passthrough script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_skyler_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ first_inf_context_script }}"
  listen_skyler_room_inf_context_on:
    alias: "SCRIPT: Listen for inf context on"
    sequence:
      - alias: "ACTION: Wait for inf context to be on"
        wait_template: "{{ is_state(inf_context_toggle_id, 'on') }}"
      - alias: "ACTION: Call passthrough script"
        service: script.turn_on
        target:
          entity_id: script.stop_inf_listen_passthrough_skyler_room
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
            callback: "{{ first_inf_context_script }}"
  stop_inf_listen_passthrough_skyler_room:
    alias: "SCRIPT: Passthrough for skyler_room"
    sequence:
      - alias: "ACTION: Turn off inferior context on listener"
        service: script.turn_off
        target:
          entity_id: script.listen_skyler_room_inf_context_on
      - alias: "ACTION: Turn off inferior context off listener"
        service: script.turn_off
        target:
          entity_id: script.listen_skyler_room_inf_context_off
      - alias: "ACTION: Turn off current context off listener"
        service: script.turn_off
        target:
          entity_id: script.listen_skyler_room_curr_context_off
      - alias: "ACTION: Call apply context or context handler"
        service: script.turn_on
        target:
          entity_id: "{{ call_back }}"
        data:
          variables:
            curr_context_toggle_id: "{{ curr_context_toggle_id }}"
            first_inf_context_script: "{{ first_inf_context_script }}"
            detach_vars_curr_context_script_id: "{{ detach_vars_curr_context_script_id }}"
            attach_vars_curr_context_script_id: "{{ attach_vars_curr_context_script_id }}"
  attach_skyler_room_main:
    alias: "SCRIPT: Attach variables of skyler_room in main"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.util_add_light_to_var
        data:
          variables:
            light_to_add: light.skyler_room
  detach_skyler_room_main:
    alias: "SCRIPT: Detach variables of skyler_room in main"
    sequence:
      - service: script.turn_on
        target:
          entity_id: script.util_remove_light_from_var
        data:
          variables:
            light_to_remove: light.skyler_room
  add_variable_to_group:
    alias: Add light to variable
    sequence:
      - service: group.set
        data:
          object_id: "{{ group_id }}"
          entities: '{{ state_attr("group_id", "entity_id") | list + [light_id] }}'
  remove_variable_from_group:
    alias: Add light to variable
    sequence:
      - service: group.set
        data:
          object_id: "{{ group_id }}"
          entities: "{{state_attr('group_id', 'entity_id')|reject('equalto', 'light_id')|
            list}}"
input_boolean:
  context_main:
    icon: "mdi: landscape"
    name: "Toggle context: main"
    initial: false
input_number:
  var_bri_brightness:
    name: "Input variable: bri"
    min: 0
    max: 100
    step: 1
    mode: slider
